<?php
/**
 * IntegrationApiTest
 * PHP version 5
 *
 * @category Class
 * @package  TalonOne\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TalonOne\Client;

use \TalonOne\Client\Configuration;
use \TalonOne\Client\ApiException;
use \TalonOne\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IntegrationApiTest Class Doc Comment
 *
 * @category Class
 * @package  TalonOne\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IntegrationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createCouponReservation
     *
     * Create a new coupon reservation.
     *
     */
    public function testCreateCouponReservation()
    {
    }

    /**
     * Test case for createReferral
     *
     * Create a referral code for an advocate.
     *
     */
    public function testCreateReferral()
    {
    }

    /**
     * Test case for deleteCouponReservation
     *
     * Delete coupon reservations.
     *
     */
    public function testDeleteCouponReservation()
    {
    }

    /**
     * Test case for deleteCustomerData
     *
     * Delete the personal data of a customer..
     *
     */
    public function testDeleteCustomerData()
    {
    }

    /**
     * Test case for getCustomerInventory
     *
     * Get an inventory of all data associated with a specific customer profile..
     *
     */
    public function testGetCustomerInventory()
    {
    }

    /**
     * Test case for getReservedCustomers
     *
     * Get the users that have this coupon reserved.
     *
     */
    public function testGetReservedCustomers()
    {
    }

    /**
     * Test case for trackEvent
     *
     * Track an Event.
     *
     */
    public function testTrackEvent()
    {
    }

    /**
     * Test case for updateCustomerProfile
     *
     * Update a Customer Profile V1.
     *
     */
    public function testUpdateCustomerProfile()
    {
    }

    /**
     * Test case for updateCustomerProfileV2
     *
     * Update a Customer Profile.
     *
     */
    public function testUpdateCustomerProfileV2()
    {
    }

    /**
     * Test case for updateCustomerSession
     *
     * Update a Customer Session V1.
     *
     */
    public function testUpdateCustomerSession()
    {
    }

    /**
     * Test case for updateCustomerSessionV2
     *
     * Update a Customer Session.
     *
     */
    public function testUpdateCustomerSessionV2()
    {
    }
}
